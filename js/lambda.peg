{
  function makeApply(exprs){
    if(exprs.length == 1)
      return exprs[0];
    else{
      var a = exprs[0], b = exprs[1];
      if(exprs.length > 2)
        return {
          type:"apply", 
          a:makeApply([a,b]), 
          b:makeApply(exprs.slice(2))
        }
      else
        return { type:"apply", a:a, b:b }
    }
  }
}
start =
  exprs:expr* { return makeApply(exprs); }

expr
  = parens
  / lambda 
  / name

parens
  = "(" expr:start ")" { return expr; }

lambda
  = "&" arg:name "." body:start { 
    return {type:"lambda", arg:arg, body:body};
  }

name
  = name:[a-z] { return {type:"name", name:name}; }
